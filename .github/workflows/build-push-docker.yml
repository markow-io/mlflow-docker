---
name: build-push-docker

on:
  schedule:
    - cron: "45 1 * * *"
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main

jobs:
  build-push:
    runs-on: ubuntu-latest
    env:
      OS: linux
      ARCH: amd64
      PYTHON_VERSION: 3.8.8
      TINI_VERSION: 0.19.0
      CONDA_VERSION: py38_4.9.2
    strategy:
      fail-fast: false
      matrix:
        BASE_IMAGE:
          - buster-slim
        MLFLOW_VERSION:
          - 1.14.1
          - 1.14.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Version
        id: version
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=VERSION::${VERSION}
      - name: Tags
        id: tags
        run: |
          IMAGE="ghcr.io/${{ github.repository }}:${{ matrix.MLFLOW_VERSION }}-${{ matrix.BASE_IMAGE }}"
          if [[ $GITHUB_REF == 'refs/tags/'* ]]; then
            TAGS="${IMAGE},${IMAGE}-${GITHUB_REF/refs\/tags\//},${IMAGE}-${GITHUB_SHA::8}-${{ github.run_number }}"
          else
            TAGS="${IMAGE},${IMAGE}-${GITHUB_SHA::8}-${{ github.run_number }}"
          fi
          echo ::set-output name=tags::${TAGS}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ env.OS }}/${{ env.ARCH }}
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: github.event_name == 'push'
        with:
          registry: ghcr.io
          username: markow-io
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Publish container images
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name == 'push' }}
          builder: ${{ steps.buildx.outputs.name }}
          context: ./mlflow/${{ matrix.BASE_IMAGE }}
          file: ./mlflow/${{ matrix.BASE_IMAGE }}/Dockerfile
          platforms: ${{ env.OS }}/${{ env.ARCH }}
          build-args: |
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
            TINI_VERSION=${{ env.TINI_VERSION }}
            CONDA_VERSION=${{ env.CONDA_VERSION }}
            MLFLOW_VERSION=${{ matrix.MLFLOW_VERSION }}
          tags: ${{ steps.tags.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ matrix.MLFLOW_VERSION }}-${{ steps.version.outputs.VERSION }}
            org.opencontainers.image.created=${{ steps.version.outputs.BUILD_DATE }}
            org.opencontainers.image.python.version=${{ env.PYTHON_VERSION }}
            org.opencontainers.image.conda.version=${{ env.CONDA_VERSION }}
            org.opencontainers.image.tini.version=${{ env.TINI_VERSION }}
